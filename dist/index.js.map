{"version":3,"file":"index.js","sources":["../src/parser/parser.ts","../src/compile.ts","../src/dep.ts","../src/reactive.ts","../src/observer.ts","../src/nexttick.ts","../src/watcher.ts","../src/index.ts"],"sourcesContent":["\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n\r\nconst isUnaryTag = tag => 'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr'.split(\",\").includes(tag)\r\n\r\n//  匹配开始标签的开始部分\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n//  匹配开始标签的结束部分\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\nexport function parse(html: string) {\r\n    const stack = []\r\n    let root: node, currentParent: node = null, nodeStack: Array<node> = []\r\n    let index = 0\r\n    let last, lastTag\r\n    while (html) {\r\n        last = html\r\n        if (/**纯文本 */true) {\r\n            let textEnd = html.indexOf('<')\r\n            if (textEnd === 0) {\r\n                if (/**注释的情况 */ false) {}\r\n                if (/**条件注释的情况 */ false) {}\r\n                if (/**<Doctype> */ false) {}\r\n                const startTagMatch = parseStartTag()\r\n                if (startTagMatch) {\r\n                    handleStartTag(startTagMatch)\r\n                    continue\r\n                }\r\n                const endTagMatch = html.match(endTag)\r\n                if (endTagMatch) {\r\n                    advance(endTagMatch[0].length)\r\n                    onEnd()\r\n                }\r\n            }\r\n            let text:string, rest: string, next:number\r\n            if (textEnd >= 0) {\r\n                rest = html.slice(textEnd)\r\n                while (\r\n                    !endTag.test(rest) &&\r\n                    !startTagOpen.test(rest)) {\r\n                    next = rest.indexOf('<', 1)\r\n                    if (next < 0) {\r\n                        break\r\n                    }\r\n                    textEnd += next\r\n                    rest = html.slice(textEnd)\r\n                }\r\n                text = html.substring(0, textEnd)\r\n            }\r\n            if (textEnd < 0) {\r\n                text = html\r\n            }\r\n            if (text) {\r\n                advance(text.length)\r\n            }\r\n        }\r\n        if (html === last) {\r\n            console.log(`last is:${last}`)\r\n            break\r\n        }\r\n    }\r\n\r\n    function advance(n: number) {\r\n        index += n\r\n        html = html.substring(n)\r\n    }\r\n\r\n    function parseStartTag():startTagMatch {\r\n        const start = html.match(startTagOpen)\r\n        if (!start) {\r\n            return\r\n        }\r\n        const match:startTagMatch = {\r\n            tagName: start[1],\r\n            attrs: [],\r\n            start: index,\r\n            unarySlash: false,\r\n            end: 0\r\n        }\r\n        advance(start[0].length)\r\n        let end, attr\r\n        while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\r\n            attr.start = index\r\n            advance(attr[0].length)\r\n            attr.end = index\r\n            match.attrs.push(attr)\r\n        }\r\n        if (end) {\r\n            match.unarySlash = !!end[1]\r\n            advance(end[0].length)\r\n            match.end = index\r\n            return match\r\n        }\r\n    }\r\n\r\n    function handleStartTag(match:startTagMatch) {\r\n        const {\r\n            tagName,\r\n            unarySlash,\r\n            attrs\r\n        } = match\r\n        const unary = isUnaryTag(tagName) || unarySlash\r\n        const len = attrs.length\r\n        for (let i = 0; i < len; i++) {\r\n            const attr = attrs[i]\r\n            const value = attr[3] || attr[4] || attr[5]\r\n            attrs[i] = {\r\n                name: attr[1],\r\n                value\r\n            }\r\n        }\r\n        if (!unary) {\r\n            stack.push({ tag: tagName, attrs })\r\n            lastTag = tagName\r\n        }\r\n        onStart(tagName, attrs, unary)\r\n    }\r\n\r\n    function onStart(tag:string, attrs:Array<attr>, unary:boolean) {\r\n        const ele:node = {\r\n            type: 1,\r\n            tag,\r\n            parent: currentParent,\r\n            attrs,\r\n            children: []\r\n        }\r\n        if (!root) {\r\n            root = ele\r\n        } else if (currentParent) {\r\n            currentParent.children.push(ele)\r\n        }\r\n        if (!unary) {\r\n            currentParent = ele\r\n            nodeStack.push(currentParent)\r\n        }\r\n    }\r\n    function onEnd() {\r\n        nodeStack.pop()\r\n        currentParent = nodeStack[nodeStack.length - 1]\r\n    }\r\n    return root\r\n}\r\n\r\n\r\n\r\ninterface node {\r\n    type:number,\r\n    tag:string,\r\n    parent: node,\r\n    attrs: Array<attr>,\r\n    children: Array<node>\r\n}\r\n\r\ninterface attr {\r\n    name: string,\r\n    value: string\r\n}\r\n\r\ninterface startTagMatch {\r\n    tagName: string,\r\n    attrs: Array<any>\r\n    start: number,\r\n    unarySlash: boolean,\r\n    end: number\r\n}","//  将模板字符串编译成渲染函数\r\n\r\nimport { parse } from \"./parser/parser\"\r\n\r\nexport function compileHtmlToFunction(template:string):(data:object|Array<any>) => string {\r\n    // const exp = \r\n    const queue = []\r\n    let matched = false\r\n    let matchedStr = \"\"\r\n    const ast = parse(template)\r\n    console.log(ast)\r\n    for (let i = 0; i < template.length; i++) {\r\n        const current = template.charAt(i)\r\n        //  普通字符串直接返回，模板字符串作为函数处理\r\n        if (current === \"{\") {\r\n            matched = true\r\n            queue.push((matchedStr))\r\n            matchedStr = \"\"\r\n        } else if (current === \"}\") {\r\n            matched = false\r\n            queue.push(createGetter(matchedStr))\r\n            matchedStr = \"\"\r\n        } else {\r\n            matchedStr += current\r\n        }\r\n    }\r\n    matchedStr && queue.push(matchedStr)\r\n    return function compiler(data:object|Array<any>):string {\r\n        let str = \"\"\r\n        for (let i = 0; i < queue.length; i++) {\r\n            str += (typeof queue[i] === \"function\" ?\r\n            queue[i](data) :\r\n            queue[i])\r\n        }\r\n        return str\r\n    }\r\n}\r\n\r\nfunction createGetter(exp) {\r\n    return function getValue(data) {\r\n        const arr = exp.split(\".\")\r\n        let value = data\r\n        for (let i = 0; i < arr.length; i++) {\r\n            value = value[arr[i]]\r\n        }\r\n        return value\r\n    }\r\n}\r\n","//  用来收集依赖\r\nimport { Watcher } from \"./watcher\"\r\n\r\nlet target:Watcher = null\r\n\r\nexport class Dep {\r\n    watchers: Array<Watcher>\r\n    constructor() {\r\n        this.watchers = []\r\n    }\r\n    addSub(watcher: Watcher) {\r\n        this.watchers.push(watcher)\r\n    }\r\n    removeSub() {\r\n\r\n    }\r\n    depend() {\r\n        //  target存在的时候才收集，避免重复收集\r\n        target && target.addDep(this)\r\n    }\r\n    //  通知更新\r\n    notify() {\r\n        for (let i = 0; i < this.watchers.length; i++) {\r\n            this.watchers[i].update()\r\n        }\r\n    }\r\n}\r\n\r\nexport function setTarget(watcher: Watcher|null) {\r\n    target = watcher\r\n}","import { Dep } from \"./dep\"\r\n//  通过proxy添加响应式\r\n//  vue2.0是通过Object.defineProperty的方式拦截，这里采用es6的proxy\r\nexport function reactive(data:object|Array<any>):any {\r\n    const dep = new Dep()\r\n    const handler = {\r\n        //  取值的时候收集依赖\r\n        get(target, key) {\r\n            dep.depend()\r\n            return target[key]\r\n        },\r\n        //  修改值的时候触发更新\r\n        set(target, key, value) {\r\n            //  数组发生改变的时候会触发两次，length触发一次，内容改变触发一次\r\n            const old = target[key]\r\n            if (old === value) {\r\n                return true\r\n            }\r\n            target[key] = value\r\n            //  触发更新\r\n            dep.notify()\r\n            return true\r\n        }\r\n    }\r\n    return new Proxy(data, handler)\r\n}","import { reactive } from \"./reactive\";\r\n/**\r\n * 创建观察者\r\n * @param data \r\n */\r\nexport function observe(data:object|Array<any>):any {\r\n    //  如果value是数组或者对象需要递归观察\r\n    Object.entries(data).forEach(([key, value]) => {\r\n        if (Array.isArray(value) || {}.toString.call(value) === \"[object Object]\") {\r\n            data[key] = observe(value)\r\n        }\r\n    })\r\n    //  返回代理后的对象\r\n    return reactive(data)\r\n}","import { Watcher } from \"./watcher\"\r\n//  异步触发更新\r\nconst watcherQueue:Array<Watcher> = []\r\nlet waiting = false\r\n\r\nfunction nextTick() {\r\n    //  异步更新，好处是可以等待同步的代码执行完毕再一次性，性能比较好\r\n    const p = Promise.resolve()\r\n    p.then(() => {\r\n        waiting = false\r\n        for (let i = 0; i < watcherQueue.length; i++) {\r\n            const watcher = watcherQueue[i]\r\n            watcher.run()\r\n        }\r\n        console.log(\"afterupdated\")\r\n    })\r\n}\r\n\r\nfunction clearWatcherQueue() {\r\n    watcherQueue.splice(0, watcherQueue.length)\r\n}\r\n\r\nexport function addWatcher(watcher: Watcher) {\r\n    if (!watcherQueue.includes(watcher)) {\r\n        watcherQueue.push(watcher)\r\n    }\r\n    //  如果当前已经在等待更新的状态，则不需要调用nextTick\r\n    if (!waiting) {\r\n        waiting = true\r\n        nextTick()\r\n    }\r\n}","import { Dep, setTarget } from \"./dep\";\r\nimport {\r\n    addWatcher\r\n} from \"./nexttick\"\r\nimport View from \".\";\r\nlet uid = 0\r\n/**\r\n * 监听\r\n */\r\nexport class Watcher {\r\n    render:(data:any)=>string\r\n    data: any\r\n    id:number\r\n    vm:View\r\n    constructor(render:(data:any)=>string, data: any, vm:View) {\r\n        this.render = render\r\n        this.data = data\r\n        this.id = uid++\r\n        this.vm = vm\r\n        this.init()\r\n    }\r\n    init() {\r\n        setTarget(this)\r\n        //  调用run的时候会对 数据 取值操作，就会触发get收集到依赖\r\n        this.run()\r\n        setTarget(null)\r\n    }\r\n    addDep(dep: Dep) {\r\n        dep.addSub(this)\r\n    }\r\n    \r\n    //  update的时候把watcher入栈，等待下次更新\r\n    update() {\r\n        addWatcher(this)\r\n    }\r\n\r\n    run() {\r\n        const value = this.render(this.data)\r\n        this.vm._update(value)\r\n    }\r\n}","import { compileHtmlToFunction } from \"./compile.js\"\r\nimport { observe } from \"./observer.js\"\r\nimport { Watcher } from \"./watcher.js\"\r\n\r\n\r\nexport default class View {\r\n    el: HTMLElement\r\n    data:any\r\n    constructor(opts) {\r\n        this.el = null\r\n        this.data = null\r\n        this.init(opts)\r\n    }\r\n\r\n    init(opts) {\r\n        const {\r\n            el,\r\n            data\r\n        } = opts\r\n        //  添加观察者\r\n        this.data = observe(data)\r\n        //  绑定dom元素\r\n        this.el = document.getElementById(el)\r\n        //  根据元素获取 模板 字符串\r\n        const template = this.getTemplate(this.el)\r\n        //  根据模板字符串生成渲染函数\r\n        const complier = compileHtmlToFunction(template)\r\n        //  监听变化后更新\r\n        new Watcher(complier, this.data, this)\r\n    }\r\n\r\n    getTemplate(el:HTMLElement):string {\r\n        return el.innerHTML\r\n    }\r\n    //  更新dom(vue里的实现这里会通过diff算法比较新旧vnode，我看不懂)\r\n    _update(value:string) {\r\n        // this.el.innerHTML = value\r\n    }\r\n\r\n\r\n}"],"names":[],"mappings":"AACA,IAAM,SAAS,GAAG,2EAA2E,CAAA;AAC7F,IAAM,mBAAmB,GAAG,uGAAuG,CAAA;AACnI,IAAM,aAAa,GAAG,6JAA6J,CAAA;AACnL,IAAM,MAAM,GAAG,+BAA6B,aAAa,CAAC,MAAM,OAAI,CAAA;AACpE,IAAM,YAAY,GAAG,SAAO,MAAM,aAAQ,MAAM,MAAG,CAAA;AAEnD,IAAM,UAAU,GAAG,UAAA,GAAG,IAAI,OAAA,2FAA2F,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAA,CAAA;AAE9I;AACA,IAAM,YAAY,GAAG,IAAI,MAAM,CAAC,OAAK,YAAc,CAAC,CAAA;AACpD;AACA,IAAM,aAAa,GAAG,YAAY,CAAA;AAElC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,UAAQ,YAAY,WAAQ,CAAC,CAAA;SAEvC,KAAK,CAAC,IAAY;IAE9B,IAAI,IAAU,EAAE,aAAa,GAAS,IAAI,EAAE,SAAS,GAAgB,EAAE,CAAA;IACvE,IAAI,KAAK,GAAG,CAAC,CAAA;QACT,IAAI,CAAS;IACjB,OAAO,IAAI,EAAE;QACT,IAAI,GAAG,IAAI,CAAA;QACQ;YACf,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;YAC/B,IAAI,OAAO,KAAK,CAAC,EAAE;gBAIf,IAAM,aAAa,GAAG,aAAa,EAAE,CAAA;gBACrC,IAAI,aAAa,EAAE;oBACf,cAAc,CAAC,aAAa,CAAC,CAAA;oBAC7B,SAAQ;iBACX;gBACD,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;gBACtC,IAAI,WAAW,EAAE;oBACb,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;oBAC9B,KAAK,EAAE,CAAA;iBACV;aACJ;YACD,IAAI,IAAI,SAAO,EAAE,IAAI,SAAQ,EAAE,IAAI,SAAO,CAAA;YAC1C,IAAI,OAAO,IAAI,CAAC,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;gBAC1B,OACI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;oBAClB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAC1B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;oBAC3B,IAAI,IAAI,GAAG,CAAC,EAAE;wBACV,MAAK;qBACR;oBACD,OAAO,IAAI,IAAI,CAAA;oBACf,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;iBAC7B;gBACD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;aACpC;YACD,IAAI,OAAO,GAAG,CAAC,EAAE;gBACb,IAAI,GAAG,IAAI,CAAA;aACd;YACD,IAAI,IAAI,EAAE;gBACN,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;aACvB;SACJ;QACD,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,aAAW,IAAM,CAAC,CAAA;YAC9B,MAAK;SACR;KACJ;IAED,SAAS,OAAO,CAAC,CAAS;QACtB,KAAK,IAAI,CAAC,CAAA;QACV,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;KAC3B;IAED,SAAS,aAAa;QAClB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;QACtC,IAAI,CAAC,KAAK,EAAE;YACR,OAAM;SACT;QACD,IAAM,KAAK,GAAiB;YACxB,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;YACjB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,KAAK;YACjB,GAAG,EAAE,CAAC;SACT,CAAA;QACD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACxB,IAAI,GAAG,EAAE,IAAI,CAAA;QACb,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE;YAC5G,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;YACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAA;YAChB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACzB;QACD,IAAI,GAAG,EAAE;YACL,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;YACtB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAA;YACjB,OAAO,KAAK,CAAA;SACf;KACJ;IAED,SAAS,cAAc,CAAC,KAAmB;QAEnC,IAAA,OAAO,GAGP,KAAK,QAHE,EACP,UAAU,GAEV,KAAK,WAFK,EACV,KAAK,GACL,KAAK,MADA,CACA;QACT,IAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,UAAU,CAAA;QAC/C,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;YACrB,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3C,KAAK,CAAC,CAAC,CAAC,GAAG;gBACP,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gBACb,KAAK,OAAA;aACR,CAAA;SACJ;QAKD,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;KACjC;IAED,SAAS,OAAO,CAAC,GAAU,EAAE,KAAiB,EAAE,KAAa;QACzD,IAAM,GAAG,GAAQ;YACb,IAAI,EAAE,CAAC;YACP,GAAG,KAAA;YACH,MAAM,EAAE,aAAa;YACrB,KAAK,OAAA;YACL,QAAQ,EAAE,EAAE;SACf,CAAA;QACD,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,GAAG,CAAA;SACb;aAAM,IAAI,aAAa,EAAE;YACtB,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACnC;QACD,IAAI,CAAC,KAAK,EAAE;YACR,aAAa,GAAG,GAAG,CAAA;YACnB,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;SAChC;KACJ;IACD,SAAS,KAAK;QACV,SAAS,CAAC,GAAG,EAAE,CAAA;QACf,aAAa,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;KAClD;IACD,OAAO,IAAI,CAAA;AACf;;ACnJA;SAIgB,qBAAqB,CAAC,QAAe;;IAEjD,IAAM,KAAK,GAAG,EAAE,CAAA;IAEhB,IAAI,UAAU,GAAG,EAAE,CAAA;IACnB,IAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;;QAElC,IAAI,OAAO,KAAK,GAAG,EAAE;YAEjB,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAA;YACxB,UAAU,GAAG,EAAE,CAAA;SAClB;aAAM,IAAI,OAAO,KAAK,GAAG,EAAE;YAExB,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAA;YACpC,UAAU,GAAG,EAAE,CAAA;SAClB;aAAM;YACH,UAAU,IAAI,OAAO,CAAA;SACxB;KACJ;IACD,UAAU,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IACpC,OAAO,SAAS,QAAQ,CAAC,IAAsB;QAC3C,IAAI,GAAG,GAAG,EAAE,CAAA;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,GAAG,KAAK,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,UAAU;gBACtC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACd,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;SACZ;QACD,OAAO,GAAG,CAAA;KACb,CAAA;AACL,CAAC;AAED,SAAS,YAAY,CAAC,GAAG;IACrB,OAAO,SAAS,QAAQ,CAAC,IAAI;QACzB,IAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAA;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACxB;QACD,OAAO,KAAK,CAAA;KACf,CAAA;AACL;;AC5CA,IAAI,MAAM,GAAW,IAAI,CAAA;AAEzB;IAEI;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;KACrB;IACD,oBAAM,GAAN,UAAO,OAAgB;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC9B;IACD,uBAAS,GAAT;KAEC;IACD,oBAAM,GAAN;;QAEI,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KAChC;;IAED,oBAAM,GAAN;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;SAC5B;KACJ;IACL,UAAC;AAAD,CAAC,IAAA;SAEe,SAAS,CAAC,OAAqB;IAC3C,MAAM,GAAG,OAAO,CAAA;AACpB;;AC7BA;AACA;SACgB,QAAQ,CAAC,IAAsB;IAC3C,IAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA;IACrB,IAAM,OAAO,GAAG;;QAEZ,GAAG,YAAC,MAAM,EAAE,GAAG;YACX,GAAG,CAAC,MAAM,EAAE,CAAA;YACZ,OAAO,MAAM,CAAC,GAAG,CAAC,CAAA;SACrB;;QAED,GAAG,YAAC,MAAM,EAAE,GAAG,EAAE,KAAK;;YAElB,IAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;YACvB,IAAI,GAAG,KAAK,KAAK,EAAE;gBACf,OAAO,IAAI,CAAA;aACd;YACD,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;;YAEnB,GAAG,CAAC,MAAM,EAAE,CAAA;YACZ,OAAO,IAAI,CAAA;SACd;KACJ,CAAA;IACD,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AACnC;;ACxBA;;;;SAIgB,OAAO,CAAC,IAAsB;;IAE1C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,EAAY;YAAX,GAAG,QAAA,EAAE,KAAK,QAAA;QACrC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB,EAAE;YACvE,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;SAC7B;KACJ,CAAC,CAAA;;IAEF,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAA;AACzB;;ACbA;AACA,IAAM,YAAY,GAAkB,EAAE,CAAA;AACtC,IAAI,OAAO,GAAG,KAAK,CAAA;AAEnB,SAAS,QAAQ;;IAEb,IAAM,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAA;IAC3B,CAAC,CAAC,IAAI,CAAC;QACH,OAAO,GAAG,KAAK,CAAA;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAA;YAC/B,OAAO,CAAC,GAAG,EAAE,CAAA;SAChB;QACD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;KAC9B,CAAC,CAAA;AACN,CAAC;SAMe,UAAU,CAAC,OAAgB;IACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;QACjC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC7B;;IAED,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,GAAG,IAAI,CAAA;QACd,QAAQ,EAAE,CAAA;KACb;AACL;;AC1BA,IAAI,GAAG,GAAG,CAAC,CAAA;AACX;;;AAGA;IAKI,iBAAY,MAAyB,EAAE,IAAS,EAAE,EAAO;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,CAAA;QACf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;QACZ,IAAI,CAAC,IAAI,EAAE,CAAA;KACd;IACD,sBAAI,GAAJ;QACI,SAAS,CAAC,IAAI,CAAC,CAAA;;QAEf,IAAI,CAAC,GAAG,EAAE,CAAA;QACV,SAAS,CAAC,IAAI,CAAC,CAAA;KAClB;IACD,wBAAM,GAAN,UAAO,GAAQ;QACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KACnB;;IAGD,wBAAM,GAAN;QACI,UAAU,CAAC,IAAI,CAAC,CAAA;KACnB;IAED,qBAAG,GAAH;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACpC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;KACzB;IACL,cAAC;AAAD,CAAC;;;IChCG,cAAY,IAAI;QACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAClB;IAED,mBAAI,GAAJ,UAAK,IAAI;QAED,IAAA,EAAE,GAEF,IAAI,GAFF,EACF,IAAI,GACJ,IAAI,KADA,CACA;;QAER,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;QAEzB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;;QAErC,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;;QAE1C,IAAM,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAA;;QAEhD,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACzC;IAED,0BAAW,GAAX,UAAY,EAAc;QACtB,OAAO,EAAE,CAAC,SAAS,CAAA;KACtB;;IAED,sBAAO,GAAP,UAAQ,KAAY;;KAEnB;IAGL,WAAC;AAAD,CAAC;;;;"}